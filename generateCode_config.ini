#
# Public site
#

[HOME]
path = /
deps = view, app
template = home
models = leagues
desc = Visualizza una call-to-action che porta ad iscriversi

[LEAGUE]
path = /league/{id}
deps = view, app
template = league
models = leagues, league, standings, fixtures

[TEAM]
path = /team/{id}
deps = view, app
template = team
models = leagues, team

[PLAYER]
path = /player/{id}
deps = view, app
template = player
models = leagues, player

[MATCH]
path = /match/{id}
deps = view, app
template = match
models = leagues, match

# Public user pages

[LOGIN]
path = /login
deps = view, app
template = login
models = leagues
desc = Visualizza la form di login

[LOGIN_EX]
path = /login
deps = router, app
method = post
failure = ERROR
success = DASHBOARD
desc = Controlla se le credenziali sono corrette. Una eccezione intercetterà il caso di un utente "admin" e redirigerà alla dashboard admin.

[REGISTER]
path = /register
deps = view, app
template = register
models = leagues
desc = Visualizza la form di registrazione

[REGISTER_EX]
path = /register
deps = router, app
method = post
failure = ERROR
success = REGISTER_CONFIRM
desc = Inserisce l'utente nel database, con stato inattivo. Invia la mail di registrazione.

#
# User pages
#

[REGISTER_CONFIRM_EX]
path = /register-confirm-ex
deps = router, app
success = MESSAGE
failure = MESSAGE
desc = Pagina di atterraggio del link di conferma inviato via mail. Controlla il codice e se corrisponde, attiva l'utente.

[DASHBOARD]
path = /dashboard
deps = view, app
template = dashboard

[LOGOUT]
path = /logout
method = post

#
# Admin section
#

[ADMIN]
path = /admin
deps = view, app
template = admin
models = leagues, adminmenuitems
desc = Visualizza un elenco di operazioni per l'amministratore del sito.

[ADMIN_MESSAGE]
path = /admin/message
deps = view, app, admin
template = admin-message
models = leagues, adminmenuitems
desc = Visualizza vari messaggi di errore o conferma per le operazioni dell'amministratore.

[ADMIN_NEWSEASON]
path = /admin/newseason
deps = view, admin
template = admin-newseason
models = leagues, teams

[ADMIN_NEWSEASON]
path = /admin/newseason
deps = router, admin
method = post

[ADMIN_CREATE_PLAYERS]
path = /admin/create-players
deps = view, app, admin
template = admin-create-players
models = leagues, adminmenuitems, counts
desc = Visualizza un form che permette di aggiungere nuovi giocatori al database generandoli in modo casuale.

[ADMIN_CREATE_PLAYERS_EX]
path = /admin/create-players
deps = router, admin
method = post
failure = ADMIN_MESSAGE
success = ADMIN_MESSAGE
desc = Crea il numero di nuovi giocatori passato dal form.

[ADMIN_SCHEDULE_MATCH]
path = /admin/schedule-match
deps = view, admin
template = admin-schedule-match
models = leagues
desc = Visualizza un form che permette di organizzare una nuova partita scegliendo le due squadre, ed il numero del turno in cui si svolgerà.

[ADMIN_SCHEDULE_MATCH]
path = /admin/schedule-match-ex
deps = router, admin
desc = Inserisce il match nel database.

[ADMIN_SCHEDULE_COMPETITION]
path = /admin/schedule-competition
deps = view, admin
template = admin-schedule-competition
models = leagues
desc = Organizza una nuova competizione.
# Organizzare una competizione significa fondamentalmente organizzare più
# partite che assegnano dei punti in una lega. La competizione può spalmarsi
# su più annate prevedendo un sistema di promozioni/retrocessioni. Le
# competizioni possono essere suddivise in più fasi. Ogni fase è definita da un
# 'tipo' lega/coppa e da un numero di squadre iniziale e da un numero di
# squadre finale. Ogni fase può essere andata/ritorno. Ogni squadra possiede
# un titolo sportivo per la competizione che le permette di partecipare l'anno
# successivo.

[ADMIN_TABLE]
path = /admin/{table}
deps = view, admin
template = admin-table
models = leagues, table

[ADMIN_RECORD]
path = /admin/{table}/{id}
deps = view, admin
template = admin-record
models = leagues, table, record

[ADMIN_RECORD_NEW]
path = /admin/{table}/new
deps = view, admin
template = admin-record-new
models = leagues, table

[ADMIN_RECORD_EDIT]
path = /admin/{table}/edit/{id}
deps = view, admin
template = admin-record-edit
models = leagues, table, record

[ADMIN_RECORD_DELETE]
path = /admin/{table}/delete/{id}
deps = view, admin
template = admin-record-delete
models = leagues, table, record

[::MODELS::]

[leagues]
deps = db

[league]
deps = db

[team]
deps = db

[player]
deps = db

[match]
deps = db

[adminmenuitems]
deps = router

[counts]
deps = db

[::SERVICES::]

[admin]
deps = db